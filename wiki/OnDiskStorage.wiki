#This explains how to store parts of the graph on disk to overcome the problem of limited memory.

= On-Disk Storage =

When using the default [http://code.google.com/p/signal-collect/source/browse/trunk/core/src/main/scala/com/signalcollect/implementations/storage/InMemoryStorage.scala InMemoryStorage] implementation all the vertices and their outgoing edges are stored in memory. For smaller applications or in a distributed scenario this will most likely suffice the requirements. For architectures where a large graph needs to be computed on one single machine, the footprint in memory of the graph might easily exceed the available resources on that machine. To overcome this limitation signal-collect provides the possibility to store parts or the entire graph in a database on disk. 

==Implementational Details==
Just as in the in-memory implementation, the vertices are uniquely identified by their ID so they can be stored, retrieved and updated. The default on-disk storage backend saves the vertices to a [http://www.oracle.com/technetwork/database/berkeleydb/overview/index-093405.html | Berkeley DB Java Edition] database. 